{"entries":[{"timestamp":1750649886705,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":217,"start2":217,"length1":64,"length2":44}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"class IoInterface extends ABC {\n    public static setSteeringAngle(aAngle: any) {\n        control.fail(\"setSteeringAngle not implemented\")\n    }\n    \n    public static setSpeed(aSpeed: any) {\n        control.fail(\"setSpeed not implemented\")\n    }\n    \n}\n\nbasic.forever(function on_forever() {\n    \n})\npins.onPulsed(DigitalPin.P0, PulseValue.High, function on_pulsed_p0_high() {\n    \n})\npins.servoWritePin(AnalogPin.P0, 180)"],[0,"\n"]],"start1":0,"start2":0,"length1":424,"length2":1}]},{"type":"added","filename":"main.py","value":"from abc import ABC\n\nclass IoInterface(ABC):\n    def setSteeringAngle(aAngle: int):\n        raise NotImplementedError(\"setSteeringAngle not implemented\")\n\n    def setSpeed(aSpeed: int):\n        raise NotImplementedError(\"setSpeed not implemented\")\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n\ndef on_pulsed_p0_high():\n    pass\npins.on_pulsed(DigitalPin.P0, PulseValue.HIGH, on_pulsed_p0_high)\n\npins.servo_write_pin(AnalogPin.P0, 180)"}]},{"timestamp":1750650345712,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ass IoInterface "],[1,"extends ABC "],[0,"{\n    public sta"]],"start1":2,"start2":2,"length1":32,"length2":44},{"diffs":[[0,"\n}\n\n"],[-1,"class MicrobitIo extends IoInterface {\n    public static setSteeringAngle(aAngle: any) {\n        \n    }\n    \n    public static setSpeed(aSpeed: any) {\n        \n    }\n    \n}\n\n"],[0,"basi"]],"start1":251,"start2":251,"length1":182,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"def clip(val: int, lo: int, hi: int) -> int:\n    if val < lo:\n        return lo\n    elif val > hi:\n        return hi\n    else:\n        return val"],[1,"from abc import ABC"],[0,"\n\ncl"]],"start1":0,"start2":0,"length1":149,"length2":23},{"diffs":[[0,"nterface"],[1,"(ABC)"],[0,":\n    de"]],"start1":30,"start2":30,"length1":16,"length2":21},{"diffs":[[0,"\")\n\n"],[-1,"\nclass MicrobitIo(IoInterface):\n    STEERING_PIN = AnalogPin.P0\n\n    def setSteeringAngle(aAngle: int):\n        pins.servo_write_pin(MicrobitIo.STEERING_PIN, clip(aAngle, 0, 180))\n    \n    def setSpeed(aSpeed: int):\n        pass\n\n\n"],[0,"def "]],"start1":245,"start2":245,"length1":239,"length2":8}]}]},{"timestamp":1750650940926,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"function clip(val: number, lo: number, hi: number): number {\n    if (val < lo) {\n        return lo\n    } else if (val > hi) {\n        return hi\n    } else {\n        return val\n    }\n    \n}\n\n"],[0,"clas"]],"start1":0,"start2":0,"length1":194,"length2":4},{"diffs":[[0,"    "],[-1,"static STEERING_PIN: number\n    private ___STEERING_PIN_is_set: boolean\n    private ___STEERING_PIN: number\n    get STEERING_PIN(): number {\n        return this.___STEERING_PIN_is_set ? this.___STEERING_PIN : MicrobitIo.STEERING_PIN\n    }\n    set STEERING_PIN(value: number) {\n        this.___STEERING_PIN_is_set = true\n        this.___STEERING_PIN = value\n    }\n    \n    public static __initMicrobitIo() {\n        MicrobitIo.STEERING_PIN = AnalogPin.P0\n    }\n    \n    public static setSteeringAngle(aAngle: number) {\n        let myClippedAngle = clip(aAngle, 0, 180)\n        pins.servoWritePin(MicrobitIo.STEERING_PIN, myClippedAngle)\n        if (myClippedAngle < 90) {\n            basic.showArrow(ArrowNames.West)\n        } else if (myClippedAngle > 90) {\n            basic.showArrow(ArrowNames.East)\n        } else {\n            //  myClippedAngle == 90\n            basic.showArrow(ArrowNames.North)\n        }\n        \n    }\n    \n    public static setSpeed(aSpeed: any) {\n        \n    }\n    \n}\n\nMicrobitIo.__initMicrobitIo()\n\nclass ControllerDecoder {\n    io: IoInterface\n    constructor(aIo: IoInterface) {\n        this.io = aIo\n    }\n    \n    public static decode(aMessage: string"],[1,"public static setSteeringAngle(aAngle: any) {\n        \n    }\n    \n    public static setSpeed(aSpeed: any) {\n        \n    }\n    \n}\n\nbasic.forever(function on_forever("],[0,") {\n    "],[-1,"  "],[-1,"  \n    }\n    \n}\n\nlet decoder = new ControllerDecoder(new MicrobitIo())\nradio.onReceivedValue(function on_received_value(name: string, value: number) {\n    \n})\nbasic.forever(function on_forever() {\n    \n}"],[1,"\n})\npins.onPulsed(DigitalPin.P0, PulseValue.High, function on_pulsed_p0_high() {\n    \n})\npins.servoWritePin(AnalogPin.P0, 180"],[0,")\n"]],"start1":282,"start2":282,"length1":1404,"length2":304}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"(val"],[-1,", lo, hi)"],[1,": int, lo: int, hi: int) -> int"],[0,":\n  "]],"start1":8,"start2":8,"length1":17,"length2":39},{"diffs":[[0,"    "],[-1,"myClippedAngle = clip(aAngle, 0, 180)\n        pins.servo_write_pin(MicrobitIo.STEERING_PIN, myClippedAngle)\n\n        if myClippedAngle < 90:\n            basic.show_arrow(ArrowNames.WEST)\n        elif myClippedAngle > 90:\n            basic.show_arrow(ArrowNames.EAST)\n        else: # myClippedAngle == 90\n            basic.show_arrow(ArrowNames.NORTH)\n    \n    def setSpeed(aSpeed: int):\n        pass\n\n\nclass ControllerDecoder:\n    def __init__(self, aIo: IoInterface):\n        self.io = aIo\n    \n    def decode(aMessage: str"],[1,"pins.servo_write_pin(MicrobitIo.STEERING_PIN, clip(aAngle, 0, 180))\n    \n    def setSpeed(aSpeed: int):\n        pass\n\n\ndef on_forever("],[0,"):\n"],[-1,"    "],[0,"    "]],"start1":478,"start2":478,"length1":539,"length2":145},{"diffs":[[0,"ass\n"],[-1,"\n\ndecoder = ControllerDecoder(MicrobitIo())\n\n\ndef on_received_value(name, value):\n    pass\nradio.on_received_value(on_received_value)\n\ndef on_forever():\n    pass\nbasic.forever(on_forever"],[1,"basic.forever(on_forever)\n\ndef on_pulsed_p0_high():\n    pass\npins.on_pulsed(DigitalPin.P0, PulseValue.HIGH, on_pulsed_p0_high)\n\npins.servo_write_pin(AnalogPin.P0, 180"],[0,")"]],"start1":624,"start2":624,"length1":191,"length2":171}]}]},{"timestamp":1750651533626,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ne\":"],[-1," \"*\",\n        \"servo\":"],[0," \"*\""]],"start1":129,"start2":129,"length1":30,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let STEERING_KEY = \"steer\"\nlet SPEED_KEY = \"speed\"\n"],[0,"func"]],"start1":0,"start2":0,"length1":55,"length2":4},{"diffs":[[0,"ce {\n    public "],[1,"static "],[0,"setSteeringAngle"]],"start1":205,"start2":205,"length1":32,"length2":39},{"diffs":[[0,"ngAngle(aAngle: "],[-1,"number"],[1,"any"],[0,") {\n        cont"]],"start1":237,"start2":237,"length1":38,"length2":35},{"diffs":[[0,"    \n    public "],[1,"static "],[0,"setSpeed(aSpeed:"]],"start1":323,"start2":323,"length1":32,"length2":39},{"diffs":[[0,"aSpeed: "],[-1,"number"],[1,"any"],[0,") {\n    "]],"start1":355,"start2":355,"length1":22,"length2":19},{"diffs":[[0,"\n    public "],[1,"static "],[0,"setSteeringA"]],"start1":940,"start2":940,"length1":24,"length2":31},{"diffs":[[0," public "],[1,"static "],[0,"setSpeed"]],"start1":1412,"start2":1412,"length1":16,"length2":23},{"diffs":[[0,"lic "],[-1,"decode(aKey: string, aVal: number) {\n        if (aKey == STEERING_KEY) {\n            this.io.setSteeringAngle(aVal)\n        } else if (aKey == SPEED_KEY) {\n            this.io.setSpeed(aVal)\n        } else {\n            control.fail(\"Received unknown key: {aKey}, with value {aVal}\")\n        }"],[1,"static decode(aMessage: string) {"],[0,"\n   "]],"start1":1627,"start2":1627,"length1":301,"length2":41},{"diffs":[[0,") {\n"],[1,""],[0,"    "],[-1,"decoder.decode(name, value)"],[0,"\n})\n"]],"start1":1818,"start2":1818,"length1":39,"length2":12}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"STEERING_KEY = \"steer\"\nSPEED_KEY = \"speed\"\n\n"],[0,"def "]],"start1":0,"start2":0,"length1":48,"length2":4},{"diffs":[[0,"etSteeringAngle("],[-1,"self, "],[0,"aAngle: int):\n  "]],"start1":153,"start2":153,"length1":38,"length2":32},{"diffs":[[0,"   def setSpeed("],[-1,"self, "],[0,"aSpeed: int):\n  "]],"start1":255,"start2":255,"length1":38,"length2":32},{"diffs":[[0,"ngAngle("],[-1,"self, "],[0,"aAngle: "]],"start1":430,"start2":430,"length1":22,"length2":16},{"diffs":[[0,"etSpeed("],[-1,"self, "],[0,"aSpeed: "]],"start1":825,"start2":825,"length1":22,"length2":16},{"diffs":[[0,"    "],[-1,"myClippedAngle = clip(aAngle, 0, 180)"],[1,"pass"],[0,"\n\n\nc"]],"start1":851,"start2":851,"length1":45,"length2":12},{"diffs":[[0,"ode("],[-1,"self, aKey, aVal):\n        if aKey == STEERING_KEY:\n            self.io.setSteeringAngle(aVal)\n        elif aKey == SPEED_KEY:\n            self.io.setSpeed(aVal)\n        else:\n            raise RuntimeError(f\"Received unknown key: {aKey}, with value {aVal}\")"],[1,"aMessage: str):\n        pass"],[0,"\n\n\nd"]],"start1":967,"start2":967,"length1":266,"length2":36},{"diffs":[[0,"tIo())\n\n"],[1,"\n"],[0,"def on_r"]],"start1":1037,"start2":1037,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"decoder.decode(name, value)\n    "],[1,"pass"],[0,"\nrad"]],"start1":1082,"start2":1082,"length1":40,"length2":12}]}]},{"timestamp":1750652130210,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"   \n"],[-1,"    static SPEED_PIN: number\n    private ___SPEED_PIN_is_set: boolean\n    private ___SPEED_PIN: number\n    get SPEED_PIN(): number {\n        return this.___SPEED_PIN_is_set ? this.___SPEED_PIN : MicrobitIo.SPEED_PIN\n    }\n    set SPEED_PIN(value: number) {\n        this.___SPEED_PIN_is_set = true\n        this.___SPEED_PIN = value\n    }\n    \n"],[0,"    "]],"start1":883,"start2":883,"length1":350,"length2":8},{"diffs":[[0,"robitIo() {\n"],[1,""],[0,"        Micr"]],"start1":914,"start2":914,"length1":24,"length2":24},{"diffs":[[0,".P0\n"],[-1,"        MicrobitIo.SPEED_PIN = AnalogPin.P1\n"],[0,"    "]],"start1":969,"start2":969,"length1":52,"length2":8},{"diffs":[[0,"ed: "],[-1,"number) {\n        let myClippedSpeed = clip(aSpeed, 0, 180)\n        pins.servoWritePin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        if (myClippedSpeed < 90) {\n            basic.showArrow(ArrowNames.West)\n        } else if (myClippedSpeed > 90) {\n            basic.showArrow(ArrowNames.East)\n        } else {\n            //  myClippedSpeed == 90\n            basic.showArrow(ArrowNames.North)\n        }\n        \n    }\n    \n    private _drawDirectionArrow(aDirection: number) {\n        for (let myX = 1; myX < 5; myX++) {\n            led.unplot(myX, 2)\n        }\n        if (aDirection == ArrowNames.East) {\n            \n        }"],[1,"any) {"],[0,"\n   "]],"start1":1469,"start2":1469,"length1":636,"length2":14}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"n.P0"],[-1,"\n    SPEED_PIN = AnalogPin.P1"],[0,"\n\n  "]],"start1":463,"start2":463,"length1":37,"length2":8},{"diffs":[[0,"pped"],[-1,"Speed = clip(aSpeed, 0, 180)\n        pins.servo_write_pin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        \n        if myClippedSpeed < 90:\n            basic.show_arrow(ArrowNames.WEST)\n        elif myClippedSpeed > 90:\n            basic.show_arrow(ArrowNames.EAST)\n        else: # myClippedSpeed == 90\n            basic.show_arrow(ArrowNames.NORTH)\n    \n    def _drawDirectionArrow(self, aDirection: ArrowNames):\n        for myX in range(1, 5):\n            led.unplot(myX, 2)\n        if aDirection == ArrowNames.EAST:\n            pass\n\n"],[1,"Angle = clip(aAngle, 0, 180)"],[0,"\n\n\nc"]],"start1":928,"start2":928,"length1":542,"length2":36}]}]},{"timestamp":1750652725620,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"let myX: number;\n        /** \n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        \n        \n */\n        for (myX = 3; myX < 5; myX++) {\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        }\n        "],[0,"for ("],[1,"let "],[0,"myX = "],[-1,"3"],[1,"1"],[0,"; my"]],"start1":2339,"start2":2339,"length1":308,"length2":24},{"diffs":[[0,"            led."],[1,"un"],[0,"plot(myX, 3)\n   "]],"start1":2379,"start2":2379,"length1":32,"length2":34},{"diffs":[[0,"led.unplot(myX, "],[-1,"3"],[1,"2"],[0,")\n        }\n    "]],"start1":2391,"start2":2391,"length1":33,"length2":33},{"diffs":[[0,"    "],[-1,"led.plot(3, 2)\n            led.plot(3, 4)\n        } else if (aDirection == ArrowNames.West) {\n            led.plot(4, 2)\n            led.plot(4, 4)\n        } else if (aDirection == ArrowNames.North) {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n            }\n        } else {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 3)\n            }"],[0,"\n   "]],"start1":2473,"start2":2473,"length1":440,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"s):\n"],[-1,"        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        \n        \"\"\"\n"],[0,"    "]],"start1":1368,"start2":1368,"length1":157,"length2":8},{"diffs":[[0,"or myX in range("],[-1,"3"],[1,"1"],[0,", 5):\n          "]],"start1":1381,"start2":1381,"length1":33,"length2":33},{"diffs":[[0,"    "],[-1,"    led.unplot(myX, 4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)"],[1,"if aDirection == ArrowNames.EAST:\n            pass"],[0,"\n\n\n\n"]],"start1":1439,"start2":1439,"length1":516,"length2":58}]}]},{"timestamp":1750653322813,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"        "],[-1,"this._drawSteering"],[1,"basic.show"],[0,"Arrow(Ar"]],"start1":1573,"start2":1573,"length1":34,"length2":26},{"diffs":[[0,"        "],[-1,"this._drawSteering"],[1,"basic.show"],[0,"Arrow(Ar"]],"start1":1660,"start2":1660,"length1":34,"length2":26},{"diffs":[[0,"    "],[-1,"this._drawSteering"],[1,"basic.show"],[0,"Arro"]],"start1":1763,"start2":1763,"length1":26,"length2":18},{"diffs":[[0,"            "],[-1,"this._drawSpeed"],[1,"basic.show"],[0,"Arrow(ArrowN"]],"start1":2019,"start2":2019,"length1":39,"length2":34},{"diffs":[[0,"rrow(ArrowNames."],[-1,"North"],[1,"West"],[0,")\n        } else"]],"start1":2042,"start2":2042,"length1":37,"length2":36},{"diffs":[[0,"            "],[-1,"this._drawSpeed"],[1,"basic.show"],[0,"Arrow(ArrowN"]],"start1":2106,"start2":2106,"length1":39,"length2":34},{"diffs":[[0,"mes."],[-1,"South"],[1,"East"],[0,")\n  "]],"start1":2141,"start2":2141,"length1":13,"length2":12},{"diffs":[[0,"    "],[-1,"this._drawSpeed"],[1,"basic.show"],[0,"Arro"]],"start1":2213,"start2":2213,"length1":23,"length2":18},{"diffs":[[0,"draw"],[-1,"SteeringArrow(aDirection: number) {\n        let myX: number;\n        /** \n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o - #\n        o o o # #\n        o o o - #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \n */\n        for (myX = 3; myX < 5; myX++) {\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        }\n        for (myX = 3; myX < 5; myX++) {\n            led.plot(myX, 3)\n        }\n        if (aDirection == ArrowNames.East) {\n            led.plot(3, 2)\n            led.plot(3, 4)\n        } else if (aDirection == ArrowNames.West) {\n            led.plot(4, 2)\n            led.plot(4, 4)\n        } else if (aDirection == ArrowNames.North) {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n            }\n        } else {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 3)\n            }\n        }\n        \n    }\n    \n    private _drawSpeedArrow(aDirection: number) {\n        let myX: number;\n        /** \n        ArrowNames:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o - #\n        o o o # #\n        o o o - #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o"],[1,"DirectionArrow(aDirection: number) {\n        let myX: number;\n        /** \n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -"],[0,"\n   "]],"start1":2294,"start2":2294,"length1":1530,"length2":161},{"diffs":[[0,"        o o o # "],[-1,"#"],[1,"-\n"],[0,"\n        o o o #"]],"start1":2470,"start2":2470,"length1":33,"length2":34},{"diffs":[[0," -\n\n        "],[-1,"o o o # #"],[0,"\n        \n *"]],"start1":2485,"start2":2485,"length1":33,"length2":24}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"        "],[-1,"self._drawSteeringA"],[1,"basic.show_a"],[0,"rrow(Arr"]],"start1":696,"start2":696,"length1":35,"length2":28},{"diffs":[[0,"        "],[-1,"self._drawSteeringA"],[1,"basic.show_a"],[0,"rrow(Arr"]],"start1":776,"start2":776,"length1":35,"length2":28},{"diffs":[[0,"    "],[-1,"self._drawSteeringA"],[1,"basic.show_a"],[0,"rrow"]],"start1":863,"start2":863,"length1":27,"length2":20},{"diffs":[[0,"    "],[-1,"self._drawSpeedBar(myClippedSpeed - "],[1,"basic.show_arrow(ArrowNames.WEST"],[0,")\n  "]],"start1":1106,"start2":1106,"length1":44,"length2":40},{"diffs":[[0,"        "],[-1,"self._drawSpeedBar"],[1,"basic.show_arrow"],[0,"(ArrowNa"]],"start1":1182,"start2":1182,"length1":34,"length2":32},{"diffs":[[0,"mes."],[-1,"SOUTH"],[1,"EAST"],[0,")\n  "]],"start1":1214,"start2":1214,"length1":13,"length2":12},{"diffs":[[0,"    "],[-1,"self._drawSpeedBar(ArrowNames.)\n\n    def _drawSteeringArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # .\n        o o o # #\n        o o o # .\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o . #\n        o o o # #\n        o o o . #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \"\"\"\n        for myX in range(3, 5):\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)\n    \n    \n    def _drawSpeedArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o - #\n        o o o # #\n        o o o - #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o"],[1,"basic.show_arrow(ArrowNames.NORTH)\n    \n    def _drawDirectionArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -"],[0,"\n   "]],"start1":1269,"start2":1269,"length1":1416,"length2":197},{"diffs":[[0,"        o o o # "],[-1,"#"],[1,"-\n"],[0,"\n        o o o #"]],"start1":1481,"start2":1481,"length1":33,"length2":34},{"diffs":[[0," -\n\n        "],[-1,"o o o # #"],[0,"\n        \"\"\""]],"start1":1496,"start2":1496,"length1":33,"length2":24},{"diffs":[[0,"t(myX, 3)\n\n\n"],[1,"\n\n"],[0,"class Contro"]],"start1":2091,"start2":2091,"length1":24,"length2":26}]}]},{"timestamp":1750653921742,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ed)\n"],[-1,"        function toBarHeight(aClippedSpeed: number): number {\n            return Math.idiv(aClippedSpeed - 90, 22)\n        }\n        \n"],[0,"    "]],"start1":2004,"start2":2004,"length1":142,"length2":8},{"diffs":[[0,"peed"],[-1,"Bar(toBarHeight(myClippedSpeed)"],[1,"Arrow(ArrowNames.North"],[0,")\n  "]],"start1":2066,"start2":2066,"length1":39,"length2":30},{"diffs":[[0,"peed"],[-1,"Bar(toBarHeight(myClippedSpeed)"],[1,"Arrow(ArrowNames.South"],[0,")\n  "]],"start1":2159,"start2":2159,"length1":39,"length2":30},{"diffs":[[0,"peed"],[-1,"Bar(toBarHeight(myClippedSpeed)"],[1,"Arrow(ArrowNames.North"],[0,")\n  "]],"start1":2264,"start2":2264,"length1":39,"length2":30},{"diffs":[[0,"o o o # "],[-1,"."],[1,"-"],[0,"\n       "]],"start1":2482,"start2":2482,"length1":17,"length2":17},{"diffs":[[0,"o o o # "],[-1,"."],[1,"-"],[0,"\n\n      "]],"start1":2518,"start2":2518,"length1":17,"length2":17},{"diffs":[[0,"  o o o "],[-1,"."],[1,"-"],[0," #\n     "]],"start1":2596,"start2":2596,"length1":17,"length2":17},{"diffs":[[0,"  o o o "],[-1,"."],[1,"-"],[0," #\n\n    "]],"start1":2632,"start2":2632,"length1":17,"length2":17},{"diffs":[[0,"peed"],[-1,"Bar(aBarHeight"],[1,"Arrow(aDirection"],[0,": nu"]],"start1":3503,"start2":3503,"length1":22,"length2":24},{"diffs":[[0,"    "],[-1,"/** \n        aBarHeight: int\n            must be in range [-4, 4]\n    \n        Positive heights plotted from the bottom up, e.g., +3:\n        . . o o o"],[1,"let myX: number;\n        /** \n        ArrowNames:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:"],[0,"\n   "]],"start1":3539,"start2":3539,"length1":159,"length2":173},{"diffs":[[0,"s.WEST:\n        "],[-1,". ."],[1,"o o"],[0," o o o\n        #"]],"start1":3701,"start2":3701,"length1":35,"length2":35},{"diffs":[[0,"o o o o\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":3719,"start2":3719,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1," # #"],[0," o o o"],[1," - #"],[0,"\n       "],[-1," # #"],[0," o o o"],[-1,"\n"],[1," # #"],[0,"\n   "]],"start1":3748,"start2":3748,"length1":37,"length2":36},{"diffs":[[0,"    "],[-1,"Negative heights plotted from the bottom up, e.g., -4"],[1,"o o o - #\n\n        ArrowNames.NORTH"],[0,":\n  "]],"start1":3785,"start2":3785,"length1":61,"length2":43},{"diffs":[[0,".NORTH:\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":3818,"start2":3818,"length1":35,"length2":35},{"diffs":[[0,"o o o o\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":3836,"start2":3836,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1," # #"],[0," o o o"],[-1,"\n  "],[1," # #\n"],[0,"      "],[-1,"# #"],[1," "],[0," o o o"],[-1,"\n  "],[1," # #\n"],[0,"      "],[-1,". ."],[1," "],[0," o o o"],[1," # #"],[0,"\n   "]],"start1":3865,"start2":3865,"length1":54,"length2":54},{"diffs":[[0,"or ("],[-1,"let "],[0,"myX = "],[-1,"0"],[1,"3"],[0,"; my"]],"start1":3938,"start2":3938,"length1":19,"length2":15},{"diffs":[[0,"ot(myX, "],[-1,"0"],[1,"2"],[0,")\n      "]],"start1":3989,"start2":3989,"length1":17,"length2":17},{"diffs":[[0,"yX, "],[-1,"1)\n        }\n        if (aBarHeight > 0) {\n            \n        } else if (aBarHeight < 0) {\n            "],[1,"4)\n        }\n        for (myX = 3; myX < 5; myX++) {\n            led.plot(myX, 3)\n        }\n        if (aDirection == ArrowNames.East) {\n            led.plot(3, 2)\n            led.plot(3, 4)\n        } else if (aDirection == ArrowNames.West) {\n            led.plot(4, 2)\n            led.plot(4, 4)\n        } else if (aDirection == ArrowNames.North) {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n            }\n        } else {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 3)\n            }"],[0,"\n   "]],"start1":4024,"start2":4024,"length1":113,"length2":589}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"gle(self, aAngle"],[1,": int"],[0,"):\n        raise"]],"start1":209,"start2":209,"length1":32,"length2":37},{"diffs":[[0,"eed(self, aSpeed"],[1,": int"],[0,"):\n        raise"]],"start1":317,"start2":317,"length1":32,"length2":37},{"diffs":[[0,", aAngle"],[1,": int"],[0,"):\n     "]],"start1":527,"start2":527,"length1":16,"length2":21},{"diffs":[[0,"self, aSpeed"],[1,": int"],[0,"):\n        m"]],"start1":945,"start2":945,"length1":24,"length2":29},{"diffs":[[0,"   \n"],[-1,"        def toBarHeight(aClippedSpeed):\n            return (aClippedSpeed - 90) // 22\n\n"],[0,"    "]],"start1":1083,"start2":1083,"length1":95,"length2":8},{"diffs":[[0,"rawSpeedBar("],[-1,"toBarHeight("],[0,"myClippedSpe"]],"start1":1138,"start2":1138,"length1":36,"length2":24},{"diffs":[[0,"r(myClippedSpeed"],[-1,")"],[1," - "],[0,")\n        elif m"]],"start1":1148,"start2":1148,"length1":33,"length2":35},{"diffs":[[0,"Bar("],[-1,"toBarHeight(myClippedSpeed)"],[1,"ArrowNames.SOUTH"],[0,")\n  "]],"start1":1230,"start2":1230,"length1":35,"length2":24},{"diffs":[[0,"Bar("],[-1,"toBarHeight(myClippedSpeed)"],[1,"ArrowNames."],[0,")\n\n "]],"start1":1316,"start2":1316,"length1":35,"length2":19},{"diffs":[[0,"peed"],[-1,"Bar"],[1,"Arrow"],[0,"(self, a"],[-1,"BarHeight"],[1,"Direction: ArrowNames"],[0,"):\n "]],"start1":2368,"start2":2368,"length1":28,"length2":42},{"diffs":[[0,"    "],[-1,"aBarHeight: int\n            must be in range [-4, 4]\n    \n        Positive heights plotted from the bottom up, e.g., +3:\n        . . o o o"],[1,"ArrowNames:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:"],[0,"\n   "]],"start1":2425,"start2":2425,"length1":146,"length2":135},{"diffs":[[0,"s.WEST:\n        "],[-1,". ."],[1,"o o"],[0," o o o\n        #"]],"start1":2549,"start2":2549,"length1":35,"length2":35},{"diffs":[[0,"o o o o\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":2567,"start2":2567,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1,"# #"],[1,"o"],[0," o o "],[-1,"o\n  "],[1,"- #\n"],[0,"      "],[-1,"# #"],[1," "],[0," o o o"],[-1,"\n"],[1," # #"],[0,"\n   "]],"start1":2597,"start2":2597,"length1":36,"length2":35},{"diffs":[[0,"    "],[-1,"Negative heights plotted from the bottom up, e.g., -4"],[1,"o o o - #\n\n        ArrowNames.NORTH"],[0,":\n  "]],"start1":2633,"start2":2633,"length1":61,"length2":43},{"diffs":[[0,".NORTH:\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":2666,"start2":2666,"length1":35,"length2":35},{"diffs":[[0,"o o o o\n        "],[-1,"# #"],[1,"o o"],[0," o o o\n        #"]],"start1":2684,"start2":2684,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1,"# #"],[1,"o"],[0," o o "],[-1,"o\n  "],[1,"# #\n"],[0,"      "],[-1,"# #"],[1," "],[0," o o o"],[-1,"\n  "],[1," # #\n"],[0,"      "],[-1,". ."],[1," "],[0," o o o"],[1," # #"],[0,"\n   "]],"start1":2714,"start2":2714,"length1":53,"length2":53},{"diffs":[[0,"n range("],[-1,"0"],[1,"3"],[0,", 5):\n  "]],"start1":2793,"start2":2793,"length1":17,"length2":17},{"diffs":[[0,"ot(myX, "],[-1,"0"],[1,"2"],[0,")\n      "]],"start1":2828,"start2":2828,"length1":17,"length2":17},{"diffs":[[0,"yX, "],[-1,"1)\n\n        if aBarHeight > 0:\n            pass\n        elif aBarHeight < 0:\n            pass"],[1,"4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)"],[0,"\n\n\nc"]],"start1":2863,"start2":2863,"length1":101,"length2":496}]}]},{"timestamp":1750654556775,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"es><"],[-1,"variable id=\"p}A%tnA8;qPTofZ*=H}Z\">STEERING_KEY</variable><variable id=\"PatO+S?eK_^#/M0x*C0H\">SPEED_KEY</variable></variables><block type=\"function_definition\" x=\"10\" y=\"10\"><mutation name=\"clip\" functionid=\"-F_*]3F-Oe4Ly.BgX^Fr\"><arg name=\"val\" id=\"r04xssj6l13n4qksncn2\" type=\"number\"></arg><arg name=\"lo\" id=\"l0p9p4xejnecfytqznm2\" type=\"number\"></arg><arg name=\"hi\" id=\"7a140c9qfzkdo03k5sbcr\" type=\"number\"></arg></mutation><field name=\"function_name\">clip</field><value name=\"r04xssj6l13n4qksncn2\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">val</field></block></value><value name=\"l0p9p4xejnecfytqznm2\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">lo</field></block></value><value name=\"7a140c9qfzkdo03k5sbcr\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">hi</field></block></value><statement name=\"STACK\"><block type=\"controls_if\"><mutation elseif=\"1\" else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">val</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">lo</field></block></value></block></value><statement name=\"DO0\"><block type=\"function_return\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" no_return_value=\"false\"></mutation><value name=\"RETURN_VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">lo</field></block></value></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">val</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">hi</field></block></value></block></value><statement name=\"DO1\"><block type=\"function_return\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" no_return_value=\"false\"></mutation><value name=\"RETURN_VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">hi</field></block></value></block></statement><statement name=\"ELSE\"><block type=\"function_return\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" no_return_value=\"false\"></mutation><value name=\"RETURN_VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\"><field name=\"VALUE\">val</field></block></value></block></statement></block></statement></block><block type=\"radio_on_value_drag\" x=\"10\" y=\"10\"><value name=\"HANDLER_DRAG_PARAM_name\"><block type=\"argument_reporter_string\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">name</field></block></value><value name=\"HANDLER_DRAG_PARAM_value\"><block type=\"argument_reporter_number\"><mutation duplicateondrag=\"true\"></mutation><field name=\"VALUE\">value</field></block></value><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"decoder.decode(name, value)\" numlines=\"1\"></mutation></block></statement></block><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"p}A%tnA8;qPTofZ*=H}Z\">STEERING_KEY</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\"><field name=\"TEXT\">steer</field></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"PatO+S?eK_^#/M0x*C0H\">SPEED_KEY</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\"><field name=\"TEXT\">speed</field></block></value><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"class IoInterface {\" line1=\"    public setSteeringAngle(aAngle: number) {\" line2=\"        control.fail(&quot;setSteeringAngle not implemented&quot;)\" line3=\"    }\" line4=\"    \" line5=\"    public setSpeed(aSpeed: number) {\" line6=\"        control.fail(&quot;setSpeed not implemented&quot;)\" line7=\"    }\" line8=\"    \" line9=\"}\" numlines=\"10\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"class MicrobitIo extends IoInterface {\" line1=\"    static STEERING_PIN: number\" line2=\"    private ___STEERING_PIN_is_set: boolean\" line3=\"    private ___STEERING_PIN: number\" line4=\"    get STEERING_PIN(): number {\" line5=\"        return this.___STEERING_PIN_is_set ? this.___STEERING_PIN : MicrobitIo.STEERING_PIN\" line6=\"    }\" line7=\"    set STEERING_PIN(value: number) {\" line8=\"        this.___STEERING_PIN_is_set = true\" line9=\"        this.___STEERING_PIN = value\" line10=\"    }\" line11=\"    \" line12=\"    static SPEED_PIN: number\" line13=\"    private ___SPEED_PIN_is_set: boolean\" line14=\"    private ___SPEED_PIN: number\" line15=\"    get SPEED_PIN(): number {\" line16=\"        return this.___SPEED_PIN_is_set ? this.___SPEED_PIN : MicrobitIo.SPEED_PIN\" line17=\"    }\" line18=\"    set SPEED_PIN(value: number) {\" line19=\"        this.___SPEED_PIN_is_set = true\" line20=\"        this.___SPEED_PIN = value\" line21=\"    }\" line22=\"    \" line23=\"    public static __initMicrobitIo() {\" line24=\"        MicrobitIo.STEERING_PIN = AnalogPin.P0\" line25=\"        MicrobitIo.SPEED_PIN = AnalogPin.P1\" line26=\"    }\" line27=\"    \" line28=\"    public setSteeringAngle(aAngle: number) {\" line29=\"        let myClippedAngle = clip(aAngle, 0, 180)\" line30=\"        pins.servoWritePin(MicrobitIo.STEERING_PIN, myClippedAngle)\" line31=\"        if (myClippedAngle &lt; 90) {\" line32=\"            this._drawSteeringArrow(ArrowNames.West)\" line33=\"        } else if (myClippedAngle &gt; 90) {\" line34=\"            this._drawSteeringArrow(ArrowNames.East)\" line35=\"        } else {\" line36=\"            //  myClippedAngle == 90\" line37=\"            this._drawSteeringArrow(ArrowNames.North)\" line38=\"        }\" line39=\"        \" line40=\"    }\" line41=\"    \" line42=\"    public setSpeed(aSpeed: number) {\" line43=\"        let myClippedSpeed = clip(aSpeed, 0, 180)\" line44=\"        pins.servoWritePin(MicrobitIo.SPEED_PIN, myClippedSpeed)\" line45=\"        function toBarHeight(aClippedSpeed: number): number {\" line46=\"            return Math.idiv(aClippedSpeed - 90, 22)\" line47=\"        }\" line48=\"        \" line49=\"        if (myClippedSpeed &lt; 90) {\" line50=\"            this._drawSpeedBar(toBarHeight(myClippedSpeed))\" line51=\"        } else if (myClippedSpeed &gt; 90) {\" line52=\"            this._drawSpeedBar(toBarHeight(myClippedSpeed))\" line53=\"        } else {\" line54=\"            //  myClippedSpeed == 90\" line55=\"            this._drawSpeedBar(toBarHeight(myClippedSpeed))\" line56=\"        }\" line57=\"        \" line58=\"    }\" line59=\"    \" line60=\"    private _drawSteeringArrow(aDirection: number) {\" line61=\"        let myX: number;\" line62=\"        /** \" line63=\"        ArrowNames.EAST:\" line64=\"        o o o o o\" line65=\"        o o o o o\" line66=\"        o o o # .\" line67=\"        o o o # #\" line68=\"        o o o # .\" line69=\"\" line70=\"        ArrowNames.WEST:\" line71=\"        o o o o o\" line72=\"        o o o o o\" line73=\"        o o o . #\" line74=\"        o o o # #\" line75=\"        o o o . #\" line76=\"\" line77=\"        ArrowNames.NORTH:\" line78=\"        o o o o o\" line79=\"        o o o o o\" line80=\"        o o o # #\" line81=\"        o o o # #\" line82=\"        o o o # #\" line83=\"        \" line84=\" */\" line85=\"        for (myX = 3; myX &lt; 5; myX++) {\" line86=\"            led.unplot(myX, 2)\" line87=\"            led.unplot(myX, 4)\" line88=\"        }\" line89=\"        for (myX = 3; myX &lt; 5; myX++) {\" line90=\"            led.plot(myX, 3)\" line91=\"        }\" line92=\"        if (aDirection == ArrowNames.East) {\" line93=\"            led.plot(3, 2)\" line94=\"            led.plot(3, 4)\" line95=\"        } else if (aDirection == ArrowNames.West) {\" line96=\"            led.plot(4, 2)\" line97=\"            led.plot(4, 4)\" line98=\"        } else if (aDirection == ArrowNames.North) {\" line99=\"            for (myX = 3; myX &lt; 5; myX++) {\" line100=\"                led.plot(myX, 2)\" line101=\"                led.plot(myX, 4)\" line102=\"            }\" line103=\"        } else {\" line104=\"            for (myX = 3; myX &lt; 5; myX++) {\" line105=\"                led.plot(myX, 3)\" line106=\"            }\" line107=\"        }\" line108=\"        \" line109=\"    }\" line110=\"    \" line111=\"    private _drawSpeedBar(aBarHeight: number) {\" line112=\"        /** \" line113=\"        aBarHeight: int\" line114=\"            must be in range [-4, 4]\" line115=\"    \" line116=\"        Positive heights plotted from the bottom up, e.g., +3:\" line117=\"        . . o o o\" line118=\"        . . o o o\" line119=\"        # # o o o\" line120=\"        # # o o o\" line121=\"        # # o o o\" line122=\"\" line123=\"        Negative heights plotted from the bottom up, e.g., -4:\" line124=\"        # # o o o\" line125=\"        # # o o o\" line126=\"        # # o o o\" line127=\"        # # o o o\" line128=\"        . . o o o\" line129=\"        \" line130=\" */\" line131=\"        for (let myX2 = 0; myX2 &lt; 5; myX2++) {\" line132=\"            led.unplot(myX2, 0)\" line133=\"            led.unplot(myX2, 1)\" line134=\"        }\" line135=\"        if (aBarHeight &gt; 0) {\" line136=\"            \" line137=\"        } else if (aBarHeight &lt; 0) {\" line138=\"            \" line139=\"        }\" line140=\"        \" line141=\"    }\" line142=\"    \" line143=\"}\" numlines=\"144\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"MicrobitIo.__initMicrobitIo()\" numlines=\"1\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"class ControllerDecoder {\" line1=\"    io: IoInterface\" line2=\"    constructor(aIo: IoInterface) {\" line3=\"        this.io = aIo\" line4=\"    }\" line5=\"    \" line6=\"    public decode(aKey: string, aVal: number) {\" line7=\"        if (aKey == STEERING_KEY) {\" line8=\"            this.io.setSteeringAngle(aVal)\" line9=\"        } else if (aKey == SPEED_KEY) {\" line10=\"            this.io.setSpeed(aVal)\" line11=\"        } else {\" line12=\"            control.fail(&quot;Received unknown key: {aKey}, with value {aVal}&quot;)\" line13=\"        }\" line14=\"        \" line15=\"    }\" line16=\"    \" line17=\"}\" numlines=\"18\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let decoder = new ControllerDecoder(new MicrobitIo())\" numlines=\"1\" declaredvars=\"decoder\"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement"],[1,"/variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\""],[0,"></b"]],"start1":63,"start2":63,"length1":11148,"length2":59}]}]},{"timestamp":1752350317399,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"blocks"],[1,"py"],[0,"prj\"\n}\n"]],"start1":286,"start2":286,"length1":21,"length2":17}]}]},{"timestamp":1752350317632,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":286,"start2":286,"length1":17,"length2":21}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"radio.onReceivedValue(function (name, value) {\n    decoder.decode(name, value)\n})"],[1,"let STEERING_KEY = \"steer\"\nlet SPEED_KEY = \"speed\""],[0,"\nfun"]],"start1":0,"start2":0,"length1":85,"length2":54},{"diffs":[[0,"ion clip"],[-1," "],[0,"(val: nu"]],"start1":56,"start2":56,"length1":17,"length2":16},{"diffs":[[0," hi: number)"],[1,": number"],[0," {\n    if (v"]],"start1":89,"start2":89,"length1":24,"length2":32},{"diffs":[[0,"  }\n"],[-1,"}\nlet STEERING_KEY = \"steer\"\nlet SPEED_KEY = \"speed\""],[1,"    \n}\n"],[0,"\ncla"]],"start1":229,"start2":229,"length1":60,"length2":15},{"diffs":[[0,"\n    \n}\n"],[1,"\n"],[0,"class Mi"]],"start1":467,"start2":467,"length1":16,"length2":17},{"diffs":[[0,"(let myX"],[-1,"2"],[0," = 0; my"]],"start1":4105,"start2":4105,"length1":17,"length2":16},{"diffs":[[0,"= 0; myX"],[-1,"2"],[0," < 5; my"]],"start1":4114,"start2":4114,"length1":17,"length2":16},{"diffs":[[0,"< 5; myX"],[-1,"2"],[0,"++) {\n  "]],"start1":4123,"start2":4123,"length1":17,"length2":16},{"diffs":[[0,"plot(myX"],[-1,"2"],[0,", 0)\n   "]],"start1":4155,"start2":4155,"length1":17,"length2":16},{"diffs":[[0,"plot(myX"],[-1,"2"],[0,", 1)\n   "]],"start1":4186,"start2":4186,"length1":17,"length2":16},{"diffs":[[0,"\n    \n}\n"],[1,"\n"],[0,"Microbit"]],"start1":4326,"start2":4326,"length1":16,"length2":17},{"diffs":[[0,"bitIo()\n"],[1,"\n"],[0,"class Co"]],"start1":4357,"start2":4357,"length1":16,"length2":17},{"diffs":[[0,"\n    \n}\n"],[1,"\n"],[0,"let deco"]],"start1":4800,"start2":4800,"length1":16,"length2":17},{"diffs":[[0,"itIo())\n"],[1,"radio.onReceivedValue(function on_received_value(name: string, value: number) {\n    decoder.decode(name, value)\n})\n"],[0,"basic.fo"]],"start1":4855,"start2":4855,"length1":16,"length2":131},{"diffs":[[0,"ion "],[1,"on_forever"],[0,"() {\n"],[-1,"\t"],[1,"    "],[0,"\n})\n"]],"start1":4997,"start2":4997,"length1":14,"length2":27}]}]},{"timestamp":1752350473523,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"            serial.writeString(\"\")\n"],[0,"    "]],"start1":4632,"start2":4632,"length1":43,"length2":8}]}]},{"timestamp":1752353088325,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"STEERING_KEY) {\n"],[1,"            serial.writeString(\"\")\n"],[0,"            this"]],"start1":4620,"start2":4620,"length1":32,"length2":67}]}]},{"timestamp":1752353091050,"editorVersion":"7.0.49","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"        serial.writeLine(`Received ${aKey} : ${aVal}`)\n"],[0,"    "]],"start1":4596,"start2":4596,"length1":63,"length2":8}]}]}],"snapshots":[{"timestamp":1750649886704,"editorVersion":"7.0.49","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"carbit\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1750653510299,"editorVersion":"7.0.49","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"STEERING_KEY = \"steer\"\nSPEED_KEY = \"speed\"\n\ndef clip(val, lo, hi):\n    if val < lo:\n        return lo\n    elif val > hi:\n        return hi\n    else:\n        return val\n\nclass IoInterface:\n    def setSteeringAngle(self, aAngle: int):\n        raise NotImplementedError(\"setSteeringAngle not implemented\")\n\n    def setSpeed(self, aSpeed: int):\n        raise NotImplementedError(\"setSpeed not implemented\")\n\n\nclass MicrobitIo(IoInterface):\n    STEERING_PIN = AnalogPin.P0\n    SPEED_PIN = AnalogPin.P1\n\n    def setSteeringAngle(self, aAngle: int):\n        myClippedAngle = clip(aAngle, 0, 180)\n        pins.servo_write_pin(MicrobitIo.STEERING_PIN, myClippedAngle)\n\n        if myClippedAngle < 90:\n            self._drawSteeringArrow(ArrowNames.WEST)\n        elif myClippedAngle > 90:\n            self._drawSteeringArrow(ArrowNames.EAST)\n        else: # myClippedAngle == 90\n            self._drawSteeringArrow(ArrowNames.NORTH)\n    \n    def setSpeed(self, aSpeed: int):\n        myClippedSpeed = clip(aSpeed, 0, 180)\n        pins.servo_write_pin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        \n        if myClippedSpeed < 90:\n            basic.show_arrow(ArrowNames.WEST)\n        elif myClippedSpeed > 90:\n            basic.show_arrow(ArrowNames.EAST)\n        else: # myClippedSpeed == 90\n            basic.show_arrow(ArrowNames.NORTH)\n\n    def _drawSteeringArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # -\n        o o o # #\n        o o o # -\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o - #\n        o o o # #\n        o o o - #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \"\"\"\n        for myX in range(3, 5):\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)\n    \n    \n        def _drawSteeringArrow(self, aDirection: ArrowNames):\n            \"\"\"\n            ArrowNames.EAST:\n            o o o o o\n            o o o o o\n            o o o # -\n            o o o # #\n            o o o # -\n\n            ArrowNames.WEST:\n            o o o o o\n            o o o o o\n            o o o - #\n            o o o # #\n            o o o - #\n\n            ArrowNames.NORTH:\n            o o o o o\n            o o o o o\n            o o o # #\n            o o o # #\n            o o o # #\n            \"\"\"\n            for myX in range(3, 5):\n                led.unplot(myX, 2)\n                led.unplot(myX, 4)\n            for myX in range(3, 5):\n                led.plot(myX, 3)\n\n            if aDirection == ArrowNames.EAST:\n                led.plot(3, 2)\n                led.plot(3, 4)\n            elif aDirection == ArrowNames.WEST:\n                led.plot(4, 2)\n                led.plot(4, 4)\n            elif aDirection == ArrowNames.NORTH:\n                for myX in range(3, 5):\n                    led.plot(myX, 2)\n                    led.plot(myX, 4)\n            else:\n                for myX in range(3, 5):\n                    led.plot(myX, 3)\n\n\nclass ControllerDecoder:\n    def __init__(self, aIo: IoInterface):\n        self.io = aIo\n    \n    def decode(self, aKey, aVal):\n        if aKey == STEERING_KEY:\n            self.io.setSteeringAngle(aVal)\n        elif aKey == SPEED_KEY:\n            self.io.setSpeed(aVal)\n        else:\n            raise RuntimeError(f\"Received unknown key: {aKey}, with value {aVal}\")\n\n\ndecoder = ControllerDecoder(MicrobitIo())\n\ndef on_received_value(name, value):\n    decoder.decode(name, value)\n    \nradio.on_received_value(on_received_value)\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"carbit\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1752350317399,"editorVersion":"7.0.49","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"","README.md":"","main.py":"STEERING_KEY = \"steer\"\nSPEED_KEY = \"speed\"\n\ndef clip(val, lo, hi):\n    if val < lo:\n        return lo\n    elif val > hi:\n        return hi\n    else:\n        return val\n\nclass IoInterface:\n    def setSteeringAngle(self, aAngle):\n        raise NotImplementedError(\"setSteeringAngle not implemented\")\n\n    def setSpeed(self, aSpeed):\n        raise NotImplementedError(\"setSpeed not implemented\")\n\n\nclass MicrobitIo(IoInterface):\n    STEERING_PIN = AnalogPin.P0\n    SPEED_PIN = AnalogPin.P1\n\n    def setSteeringAngle(self, aAngle):\n        myClippedAngle = clip(aAngle, 0, 180)\n        pins.servo_write_pin(MicrobitIo.STEERING_PIN, myClippedAngle)\n\n        if myClippedAngle < 90:\n            self._drawSteeringArrow(ArrowNames.WEST)\n        elif myClippedAngle > 90:\n            self._drawSteeringArrow(ArrowNames.EAST)\n        else: # myClippedAngle == 90\n            self._drawSteeringArrow(ArrowNames.NORTH)\n    \n    def setSpeed(self, aSpeed):\n        myClippedSpeed = clip(aSpeed, 0, 180)\n        pins.servo_write_pin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        \n        def toBarHeight(aClippedSpeed):\n            return (aClippedSpeed - 90) // 22\n\n        if myClippedSpeed < 90:\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n        elif myClippedSpeed > 90:\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n        else: # myClippedSpeed == 90\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n\n    def _drawSteeringArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # .\n        o o o # #\n        o o o # .\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o . #\n        o o o # #\n        o o o . #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \"\"\"\n        for myX in range(3, 5):\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)\n    \n    \n    def _drawSpeedBar(self, aBarHeight):\n        \"\"\"\n        aBarHeight: int\n            must be in range [-4, 4]\n    \n        Positive heights plotted from the bottom up, e.g., +3:\n        . . o o o\n        . . o o o\n        # # o o o\n        # # o o o\n        # # o o o\n\n        Negative heights plotted from the bottom up, e.g., -4:\n        # # o o o\n        # # o o o\n        # # o o o\n        # # o o o\n        . . o o o\n        \"\"\"\n        for myX in range(0, 5):\n            led.unplot(myX, 0)\n            led.unplot(myX, 1)\n\n        if aBarHeight > 0:\n            pass\n        elif aBarHeight < 0:\n            pass\n\n\nclass ControllerDecoder:\n    def __init__(self, aIo: IoInterface):\n        self.io = aIo\n    \n    def decode(self, aKey, aVal):\n        if aKey == STEERING_KEY:\n            self.io.setSteeringAngle(aVal)\n        elif aKey == SPEED_KEY:\n            self.io.setSpeed(aVal)\n        else:\n            raise RuntimeError(f\"Received unknown key: {aKey}, with value {aVal}\")\n\n\ndecoder = ControllerDecoder(MicrobitIo())\n\ndef on_received_value(name, value):\n    decoder.decode(name, value)\n    \nradio.on_received_value(on_received_value)\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"carbit\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1752353088325,"editorVersion":"7.0.49","text":{"main.blocks":"","main.ts":"radio.onReceivedValue(function (name, value) {\n    decoder.decode(name, value)\n})\nfunction clip (val: number, lo: number, hi: number) {\n    if (val < lo) {\n        return lo\n    } else if (val > hi) {\n        return hi\n    } else {\n        return val\n    }\n}\nlet STEERING_KEY = \"steer\"\nlet SPEED_KEY = \"speed\"\nclass IoInterface {\n    public setSteeringAngle(aAngle: number) {\n        control.fail(\"setSteeringAngle not implemented\")\n    }\n    \n    public setSpeed(aSpeed: number) {\n        control.fail(\"setSpeed not implemented\")\n    }\n    \n}\nclass MicrobitIo extends IoInterface {\n    static STEERING_PIN: number\n    private ___STEERING_PIN_is_set: boolean\n    private ___STEERING_PIN: number\n    get STEERING_PIN(): number {\n        return this.___STEERING_PIN_is_set ? this.___STEERING_PIN : MicrobitIo.STEERING_PIN\n    }\n    set STEERING_PIN(value: number) {\n        this.___STEERING_PIN_is_set = true\n        this.___STEERING_PIN = value\n    }\n    \n    static SPEED_PIN: number\n    private ___SPEED_PIN_is_set: boolean\n    private ___SPEED_PIN: number\n    get SPEED_PIN(): number {\n        return this.___SPEED_PIN_is_set ? this.___SPEED_PIN : MicrobitIo.SPEED_PIN\n    }\n    set SPEED_PIN(value: number) {\n        this.___SPEED_PIN_is_set = true\n        this.___SPEED_PIN = value\n    }\n    \n    public static __initMicrobitIo() {\n        MicrobitIo.STEERING_PIN = AnalogPin.P0\n        MicrobitIo.SPEED_PIN = AnalogPin.P1\n    }\n    \n    public setSteeringAngle(aAngle: number) {\n        let myClippedAngle = clip(aAngle, 0, 180)\n        pins.servoWritePin(MicrobitIo.STEERING_PIN, myClippedAngle)\n        if (myClippedAngle < 90) {\n            this._drawSteeringArrow(ArrowNames.West)\n        } else if (myClippedAngle > 90) {\n            this._drawSteeringArrow(ArrowNames.East)\n        } else {\n            //  myClippedAngle == 90\n            this._drawSteeringArrow(ArrowNames.North)\n        }\n        \n    }\n    \n    public setSpeed(aSpeed: number) {\n        let myClippedSpeed = clip(aSpeed, 0, 180)\n        pins.servoWritePin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        function toBarHeight(aClippedSpeed: number): number {\n            return Math.idiv(aClippedSpeed - 90, 22)\n        }\n        \n        if (myClippedSpeed < 90) {\n            this._drawSpeedBar(toBarHeight(myClippedSpeed))\n        } else if (myClippedSpeed > 90) {\n            this._drawSpeedBar(toBarHeight(myClippedSpeed))\n        } else {\n            //  myClippedSpeed == 90\n            this._drawSpeedBar(toBarHeight(myClippedSpeed))\n        }\n        \n    }\n    \n    private _drawSteeringArrow(aDirection: number) {\n        let myX: number;\n        /** \n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # .\n        o o o # #\n        o o o # .\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o . #\n        o o o # #\n        o o o . #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \n */\n        for (myX = 3; myX < 5; myX++) {\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        }\n        for (myX = 3; myX < 5; myX++) {\n            led.plot(myX, 3)\n        }\n        if (aDirection == ArrowNames.East) {\n            led.plot(3, 2)\n            led.plot(3, 4)\n        } else if (aDirection == ArrowNames.West) {\n            led.plot(4, 2)\n            led.plot(4, 4)\n        } else if (aDirection == ArrowNames.North) {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n            }\n        } else {\n            for (myX = 3; myX < 5; myX++) {\n                led.plot(myX, 3)\n            }\n        }\n        \n    }\n    \n    private _drawSpeedBar(aBarHeight: number) {\n        /** \n        aBarHeight: int\n            must be in range [-4, 4]\n    \n        Positive heights plotted from the bottom up, e.g., +3:\n        . . o o o\n        . . o o o\n        # # o o o\n        # # o o o\n        # # o o o\n\n        Negative heights plotted from the bottom up, e.g., -4:\n        # # o o o\n        # # o o o\n        # # o o o\n        # # o o o\n        . . o o o\n        \n */\n        for (let myX2 = 0; myX2 < 5; myX2++) {\n            led.unplot(myX2, 0)\n            led.unplot(myX2, 1)\n        }\n        if (aBarHeight > 0) {\n            \n        } else if (aBarHeight < 0) {\n            \n        }\n        \n    }\n    \n}\nMicrobitIo.__initMicrobitIo()\nclass ControllerDecoder {\n    io: IoInterface\n    constructor(aIo: IoInterface) {\n        this.io = aIo\n    }\n    \n    public decode(aKey: string, aVal: number) {\n        if (aKey == STEERING_KEY) {\n            this.io.setSteeringAngle(aVal)\n        } else if (aKey == SPEED_KEY) {\n            this.io.setSpeed(aVal)\n        } else {\n            control.fail(\"Received unknown key: {aKey}, with value {aVal}\")\n        }\n        \n    }\n    \n}\nlet decoder = new ControllerDecoder(new MicrobitIo())\nbasic.forever(function () {\n\t\n})\n","README.md":"","main.py":"STEERING_KEY = \"steer\"\nSPEED_KEY = \"speed\"\n\ndef clip(val, lo, hi):\n    if val < lo:\n        return lo\n    elif val > hi:\n        return hi\n    else:\n        return val\n\nclass IoInterface:\n    def setSteeringAngle(self, aAngle):\n        raise NotImplementedError(\"setSteeringAngle not implemented\")\n\n    def setSpeed(self, aSpeed):\n        raise NotImplementedError(\"setSpeed not implemented\")\n\n\nclass MicrobitIo(IoInterface):\n    STEERING_PIN = AnalogPin.P0\n    SPEED_PIN = AnalogPin.P1\n\n    def setSteeringAngle(self, aAngle):\n        myClippedAngle = clip(aAngle, 0, 180)\n        pins.servo_write_pin(MicrobitIo.STEERING_PIN, myClippedAngle)\n\n        if myClippedAngle < 90:\n            self._drawSteeringArrow(ArrowNames.WEST)\n        elif myClippedAngle > 90:\n            self._drawSteeringArrow(ArrowNames.EAST)\n        else: # myClippedAngle == 90\n            self._drawSteeringArrow(ArrowNames.NORTH)\n    \n    def setSpeed(self, aSpeed):\n        myClippedSpeed = clip(aSpeed, 0, 180)\n        pins.servo_write_pin(MicrobitIo.SPEED_PIN, myClippedSpeed)\n        \n        def toBarHeight(aClippedSpeed):\n            return (aClippedSpeed - 90) // 22\n\n        if myClippedSpeed < 90:\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n        elif myClippedSpeed > 90:\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n        else: # myClippedSpeed == 90\n            self._drawSpeedBar(toBarHeight(myClippedSpeed))\n\n    def _drawSteeringArrow(self, aDirection: ArrowNames):\n        \"\"\"\n        ArrowNames.EAST:\n        o o o o o\n        o o o o o\n        o o o # .\n        o o o # #\n        o o o # .\n\n        ArrowNames.WEST:\n        o o o o o\n        o o o o o\n        o o o . #\n        o o o # #\n        o o o . #\n\n        ArrowNames.NORTH:\n        o o o o o\n        o o o o o\n        o o o # #\n        o o o # #\n        o o o # #\n        \"\"\"\n        for myX in range(3, 5):\n            led.unplot(myX, 2)\n            led.unplot(myX, 4)\n        for myX in range(3, 5):\n            led.plot(myX, 3)\n\n        if aDirection == ArrowNames.EAST:\n            led.plot(3, 2)\n            led.plot(3, 4)\n        elif aDirection == ArrowNames.WEST:\n            led.plot(4, 2)\n            led.plot(4, 4)\n        elif aDirection == ArrowNames.NORTH:\n            for myX in range(3, 5):\n                led.plot(myX, 2)\n                led.plot(myX, 4)\n        else:\n            for myX in range(3, 5):\n                led.plot(myX, 3)\n    \n    \n    def _drawSpeedBar(self, aBarHeight):\n        \"\"\"\n        aBarHeight: int\n            must be in range [-4, 4]\n    \n        Positive heights plotted from the bottom up, e.g., +3:\n        . . o o o\n        . . o o o\n        # # o o o\n        # # o o o\n        # # o o o\n\n        Negative heights plotted from the bottom up, e.g., -4:\n        # # o o o\n        # # o o o\n        # # o o o\n        # # o o o\n        . . o o o\n        \"\"\"\n        for myX in range(0, 5):\n            led.unplot(myX, 0)\n            led.unplot(myX, 1)\n\n        if aBarHeight > 0:\n            pass\n        elif aBarHeight < 0:\n            pass\n\n\nclass ControllerDecoder:\n    def __init__(self, aIo: IoInterface):\n        self.io = aIo\n    \n    def decode(self, aKey, aVal):\n        serial.write_line(f\"Received {aKey} : {aVal}\")\n        if aKey == STEERING_KEY:\n            self.io.setSteeringAngle(aVal)\n        elif aKey == SPEED_KEY:\n            self.io.setSpeed(aVal)\n        else:\n            raise RuntimeError(f\"Received unknown key: {aKey}, with value {aVal}\")\n\n\ndecoder = ControllerDecoder(MicrobitIo())\n\ndef on_received_value(name, value):\n    decoder.decode(name, value)\n    \nradio.on_received_value(on_received_value)\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)","pxt.json":"{\n    \"name\": \"carbit\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1752353132692}